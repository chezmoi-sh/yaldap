name: Go
on:
  pull_request:
    paths: [cmd/**, pkg/**, go.mod, go.sum, .github/workflows/go.yaml]
  push:
    branches: [main]
    paths: [cmd/**, pkg/**, go.mod, go.sum, .github/workflows/go.yaml]

jobs:
  lint:
    name: Lint
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # renovate: tag=v3.2.0
      with:
        go-version: 1.18
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # renovate: tag=v3.0.2
    - uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc # renovate: tag=v3.2.0
      with:
        version: latest

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: [1.18]
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # renovate: tag=v3.2.0
      with:
        go-version: ${{ matrix.go }}
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # renovate: tag=v3.0.2
    - run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
    - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
      env:
        OS: ${{ matrix.os }}
        GO_VERSION: ${{ matrix.go }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out
        env_vars: GO_VERSION
        fail_ci_if_error: true
        flags: unittests
        verbose: true
