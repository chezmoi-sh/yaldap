dc:org: #dn: dc=org
  objectClass: [top, domain]

  dc:example: #dn: dc=example,dc=org
    objectClass: [domain]

    ou:group: #dn: ou=group,dc=example,dc=org
      objectClass: [top]

      cn:owner: #dn: cn=owner,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1000
        description: Organization owners
        memberUid: [alice]
      cn:dev: #dn: cn=dev,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1001
        description: Organization developers
        memberUid: [alice, bob, charlie, eve]
      cn:qa: #dn: cn=qa,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1002
        description: Organization quality assurance
        memberUid: [eve]

    ou:people: #dn: ou=people,c=fr,dc=example,dc=org
      objectClass: [top]

      cn:bind:
        objectClass: top
        .#acl:
          - !!ldap/acl:allow-on dc=org
        password: !!ldap/bind:password bind

      {{ $users := readFile "fixtures/secrets/password.json" | fromJson }}
      {{ range $i, $user := ($users | keys | sortAlpha) }}
      cn:{{ $user }}: #dn: cn={{ $user }},ou=people,dc=example,dc=org
        objectClass: posixAccount
        .#acl:
          - !!ldap/acl:allow-on cn={{ $user }},ou=people,dc=example,dc=org # allow user to request itself

        description: User {{ $user }}
        uid: {{ $user }}
        uidNumber: {{ add 1000 $i }}
        gidNumber: {{ if eq $user "alice" }} 1000 {{ else }} 1001 {{ end }}
        loginShell: /bin/bash
        homeDirectory: /home/{{ $user }}
        userPassword: !!ldap/bind:password {{ index $users $user }}
        userMail: {{ $user }}@example.org
      {{ end }}
