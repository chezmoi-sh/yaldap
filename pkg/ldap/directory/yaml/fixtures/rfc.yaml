dc:org: #dn: dc=org
  dc:example: #dn: dc=example,dc=org
    ou:group: #dn: ou=group,dc=example,dc=org
      cn:owner: #dn: cn=admin,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1000
        description: Organization owners
        memberUid: {{{ search '(gidNumber=1000)' | attribute uidNumber }}} #RFC(02): not yet implemented
      cn:dev: #dn: cn=dev,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1001
        description: Organization developers
        memberUid: {{{ search '(gidNumber=1001)' | attribute uidNumber }}} #RFC(02): not yet implemented
      cn:qa: #dn: cn=qa,ou=group,dc=example,dc=org
        objectClass: posixGroup
        gidNumber: 1002
        memberUid: {{{ search '(gidNumber=1002)' | attribute uidNumber }}} #RFC(02): not yet implemented

    c:global: #dn: c=global,dc=example,dc=org
      ou:people: #dn: ou=people,c=global,dc=example,dc=org
        cn:alice: #dn: cn=alice,ou=people,c=global,dc=example,dc=org
          objectClass: posixAccount
          .#allowDN: !!ldap/acl:allow-on [dc=org] # allow alice to request everything

          uid: alice
          description: Main organization admin
          homeDirectory: /home/alice
          uidNumber: 1000
          gidNumber: 1000
          loginShell: /bin/bash
          userPassword: !!ldap/bind:password {{{ hscVaultSecret '/secret/ldap/users/global/alice#password' | passwordType 'base64' }}} #RFC(02): not yet implemented
        cn:bob: #dn: cn=bob,ou=people,c=global,dc=example,dc=org
          objectClass: posixAccount
          .#allowDN: !!ldap/acl:allow-on [ou=group,dc=example,dc=org] # allow bob request only for user groups

          uid: bob
          homeDirectory: /home/bob
          uidNumber: 1001
          gidNumber: 1001
          userPassword: {{{ hscVaultSecret '/secret/ldap/users/global/bob#password' | passwordType 'base64' }}} #RFC(02): not yet implemented

    c:fr: #dn: c=fr,dc=example,dc=org
      ou:people: #dn: ou=people,c=fr,dc=example,dc=org
        cn:charlie: #dn: cn=charlie,ou=people,c=fr,dc=example,dc=org
          objectClass: posixAccount
          .#allowDN: !!ldap/acl:allow-on [ou=group,dc=example,dc=org, c=fr,dc=example,dc=org] # allow charlie request only for user groups & fr peoples ...
          .#denyDN: !!ldap/acl:deny-on cn=admin,ou=group,dc=example,dc=org # ...but deny access to owner group

          uid: charlie
          homeDirectory: /home/charlie
          uidNumber: 1100
          gidNumber: 1000
          userPassword: !!ldap/bind:password {{{ hscVaultSecret '/secret/ldap/users/global/bob#password' | passwordType 'base64' }}} #RFC(02): not yet implemented
        {{- range $id, $name := (hscVaultList 'secret/ldap/users/fr' | eval | without 'charlie') }} #RFC(02): not yet implemented
        cn:{{ $name }}: #dn: cn={{ $name }},ou=people,c=fr,dc=example,dc=org
          objectClass: posixAccount

          uid: charlie
          homeDirectory: /home/{{ $name }}
          uidNumber: {{ add $id 1101 }}
          gidNumber: 1001
          userPassword: !!ldap/bind:password {{{ hscVaultSecret (printf '/secret/ldap/users/global/%s#password' $name) | passwordType 'base64' }}} #RFC(02): not yet implemented
        {{- end }}

    c:uk: #dn: c=uk,dc=example,dc=org
      ou:people: #dn: ou=people,c=fr,dc=example,dc=org
        cn:eve: #dn: cn=eve,ou=people,c=uk,dc=example,dc=org
          objectClass: posixAccount

          #NOTE: eve can't make any LDAP request (no !!ldap/bind:password field)
          uid: eve
          homeDirectory: /home/eve
          uidNumber: 1003
          gidNumber: 1002
          userPassword: eve

---
!!ldap/schemas #RFC(03): not yet implemented

objectClasses:
- posixGroup:1.3.6.1.1.1.2.2:structural:Abstraction of a group of accounts
- posixAccount:1.3.6.1.1.1.2.0:auxiliary:Abstraction of an account with POSIX attributes